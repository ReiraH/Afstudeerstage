#include <Arduino.h>
#include <time.h>
#include <EEPROM.h>
#include <stdio.h> 

#define EEPROM_SIZE 1

#define ANALOG_PIN_0 0
float analog_value0 = 0;

#define GSR_RESISTOR 1000000000
#define ANALOG_PIN_2 2
float analog_value2 = 0;

#define Breath_RESISTOR 1000000
#define ANALOG_PIN_14 14
float analog_value14 = 0;

float update_analog_pin_0 = 0;

unsigned long aTime;

void setup() {
  Serial.begin(115200);

  // initialize EEPROM with predefined size
  EEPROM.begin(EEPROM_SIZE);

  // read the last LED state from flash memory
  EEPROM.read(0);
  Serial.println("Lees vanuit de EEPROM: ");

  delay(1000);
  Serial.println("ESP32 Analog IN Test");
}

void loop() {
  // put your main code here, to run repeatedly:
  aTime = millis();
  analog_value0 = analogRead(ANALOG_PIN_0);
  analog_value14 = analogRead(ANALOG_PIN_14);
  analog_value2 = analogRead(ANALOG_PIN_2);

//  if (digitalRead(ANALOG_PIN_0)!= update_analog_pin_0) {  
//    Serial.println("State changed");
//  }

  update_analog_pin_0 = (analog_value0/1000.0); // in float type
  EEPROM.write(0, update_analog_pin_0);
  Serial.printf("eeprom write %f", update_analog_pin_0);
  EEPROM.commit();
  Serial.println("eeprom commit");
  EEPROM.read(0);
 // Serial.println("eeprom read" + convertToString);
  //Serial.println("State saved in flash memory" + aTime + update_analog_pin_0);
  
  
  /*Serial.println("t: " + String(aTime) + 
                " p: " + String(analog_value0) + 
                " b: " + String(analog_value14) + 
                " g: " + String(analog_value2));*/
  delay(1000);
  // (10)/20-50 milliseconden sample rate
}

//  float R = (SERIESRESISTOR * analog_value / (1023 - analog_value)) * (-1);